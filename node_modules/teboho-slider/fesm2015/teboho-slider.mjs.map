{"version":3,"file":"teboho-slider.mjs","sources":["../../../projects/teboho-slider/src/lib/teboho-slider.component.ts","../../../projects/teboho-slider/src/lib/teboho-slider.component.html","../../../projects/teboho-slider/src/lib/teboho-slider.module.ts","../../../projects/teboho-slider/src/public-api.ts","../../../projects/teboho-slider/src/teboho-slider.ts"],"sourcesContent":["import {Component, HostListener, Input, OnInit} from '@angular/core'\n\nexport interface SliderInterface {\n  title: string\n  imageUrl: string\n}\n\n@Component({\n  selector: 'teboho-slider',\n  templateUrl: './teboho-slider.component.html',\n  styleUrls: ['./teboho-slider.scss']\n})\nexport class TebohoSliderComponent implements OnInit {\n  @Input('data') data: SliderInterface[] = []\n  @Input('timer') timer: number | undefined\n\n  cardContainers: number = window.innerWidth > 990 ? 5 : 3\n  containerArrayBlock: Array<any> = new Array(this.cardContainers)\n  sliderData: SliderInterface[] = []\n  selectedIndex: number = 0\n\n  @HostListener('window:resize', ['$event'])\n  onResize (event: any) {\n    let windowWidth = event.target.innerWidth\n    if (windowWidth > 990) {\n      this.containerArrayBlock = new Array(5)\n    } else {\n      this.containerArrayBlock = new Array(3)\n    }\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.setSliderItems()\n    this.onAutoScroll()\n  }\n\n  getClass(i: number): string {\n    let className = ''\n    if (window.innerWidth > 990) {\n      switch (i) {\n        case 0:\n        case 4:\n          className = 'last'\n\n          break\n        case 1:\n        case 3:\n          className = 'next'\n          break\n        case 2:\n          className = 'active'\n          break\n      }\n    } else {\n      switch (i) {\n        case 0:\n        case 2:\n          className = 'next'\n          break\n        case 1:\n          className = 'active'\n          break\n      }\n    }\n\n    return className\n  }\n\n  onNext(): void {\n    if (this.selectedIndex < this.data.length - 1) {\n      this.selectedIndex++\n    } else {\n      this.selectedIndex = 0\n    }\n\n    this.setSliderItems()\n  }\n\n  onPrevious(): void {}\n\n  setSliderItems(): void {\n    let temp = 0\n\n    this.sliderData = []\n\n    for (let i = 0; i < this.cardContainers; i++) {\n      if (this.data[i + this.selectedIndex]) {\n        this.sliderData.push(this.data[i + this.selectedIndex])\n      } else {\n        this.sliderData.push(this.data[temp])\n        temp++\n      }\n    }\n  }\n\n  onAutoScroll(): void {\n    if (Number(this.timer)) {\n      setInterval(() => this.onNext(), Number(this.timer) * 1000)\n    }\n  }\n}\n\n","<div class=\"slider\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" fill=\"currentColor\"\n    class=\"bi bi-arrow-left-circle-fill previousButton\" viewBox=\"0 0 16 16\" (click)=\"onPrevious()\">\n    <path\n      d=\"M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\" />\n  </svg>\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" fill=\"currentColor\"\n    class=\"bi bi-arrow-right-circle-fill nextButton\" viewBox=\"0 0 16 16\" (click)=\"onNext()\">\n    <path\n      d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\" />\n  </svg>\n\n  <div class=\"slider-container\">\n    <div class=\"card\" *ngFor=\"let item of containerArrayBlock; let i = index\" ngClass=\"{{ getClass(i) }}\">\n      <div class=\"title\">{{ sliderData[i].title }}</div>\n      <img [src]=\"sliderData[i].imageUrl\" class=\"image\" alt=\"\" />\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { TebohoSliderComponent } from './teboho-slider.component';\nimport { CommonModule } from \"@angular/common\";\n\n\n\n@NgModule({\n  declarations: [\n    TebohoSliderComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TebohoSliderComponent\n  ]\n})\nexport class TebohoSliderModule { }\n","/*\n * Public API Surface of teboho-slider\n */\n\nexport * from './lib/teboho-slider.component';\nexport * from './lib/teboho-slider.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}